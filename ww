#!/usr/bin/env bash
# Usage: ww -h

TOGGLE="false"
POSITIONAL=()
while [[ $# -gt 0 ]]; do
	key="$1"

	case $key in
	-d | --desktop)
		DESKTOP="$2"
		shift # past argument
		shift # past value
		;;
	-p | --process)
		PROCESS="$2"
		shift # past argument
		shift # past value
		;;
	-fc | --filter-class)
		FILTERCLASS="$2"
		shift # past argument
		shift # past value
		;;
	-ft | --filter-title)
		FILTERTITLE="$2"
		shift # past argument
		shift # past value
		;;
	-t | --toggle)
		TOGGLE="true"
		shift # past argument
		;;
	-h | --help)
		HELP="1"
		shift # past argument
		shift # past value
		;;
	*)                  # unknown option
		POSITIONAL+=("$1") # save it in an array for later
		shift              # past argument
		;;
	esac
done
set -- "${POSITIONAL[@]}" # restore positional parameters

# use desktop entries name for filtering
[ -z "$FILTERCLASS" ] &&  [ -n "$DESKTOP" ] && FILTERCLASS="$DESKTOP"

if [ -n "$HELP" ]; then
	cat <<EOF
ww. Utility to raise or jump an applications in KDE. It interacts with KWin using KWin scripts and it is compatible with X11 and Wayland

Paramaters:

-h  --help                show this help
-fc --filter-class        filter by window class
-ft --filter-title        filter by window title (caption)
-t  --toggle              also minimize the window if it is already active
-p  --process             process to check if running
-d  --desktop             desktop entry name to be executed by gtk-launch
EOF
	exit 0
fi

# Check condition
if [ -z "$PROCESS" ]; then
	echo You need to specify a process name. By -p.
	exit 1
fi

if [ -z "$FILTERCLASS" ] && [ -z "$FILTERTITLE" ]; then
	echo You need to specify a window filter. Either by class -fc or by title -ft
	exit 1
fi

SCRIPT_TEMPLATE=$(
	cat <<EOF
function kwinactivateclient(clientClass, clientCaption, toggle) {
  var clients = workspace.clientList();
  var compareToCaption = new RegExp(clientCaption || '', 'i');
  var compareToClass = clientClass;
  var isCompareToClass = clientClass.length > 0
  for (var i=0; i<clients.length; i++) {
      var client = clients[i];
      var classCompare = (isCompareToClass && client.resourceClass == compareToClass)
      var captionCompare = (!isCompareToClass && compareToCaption.exec(client.caption))
      if (classCompare || captionCompare) {
          if (workspace.activeClient != client) {
              workspace.activeClient = client;
          } else if (toggle) {
              client.minimized = true;
          }
          break;
      }
  }
}
kwinactivateclient('CLASS_NAME', 'CAPTION_NAME', TOGGLE);
EOF
)

CURRENT_SCRIPT_NAME=$(basename "$0")

# ensure the script file exists
function ensure_script {
	if [ ! -f SCRIPT_PATH ]; then
		if [ ! -d "$SCRIPT_FOLDER" ]; then
			mkdir -p "$SCRIPT_FOLDER"
		fi
		SCRIPT_CONTENT=${SCRIPT_TEMPLATE/CLASS_NAME/$1}
		SCRIPT_CONTENT=${SCRIPT_CONTENT/CAPTION_NAME/$2}
		SCRIPT_CONTENT=${SCRIPT_CONTENT/TOGGLE/$3}
		#if [ "$1" == "class" ]; then
		#SCRIPT_CONTENT=${SCRIPT_CLASS_NAME/REPLACE_ME/$2}
		#else
		#SCRIPT_CONTENT=${SCRIPT_CAPTION/REPLACE_ME/$2}
		#fi
		echo "$SCRIPT_CONTENT" >"$SCRIPT_PATH"
	fi
}

IS_RUNNING=$(pgrep -o -a -f "$PROCESS" | grep -c -v "$CURRENT_SCRIPT_NAME")
if [ "$IS_RUNNING" != 0 ] || [ -n "$FILTERTITLE" ]; then
	SCRIPT_FOLDER="${XDG_CACHE_HOME:-${HOME}/.cache}/wwscripts"
	SCRIPT_NAME="$(echo "$FILTERCLASS$FILTERTITLE" | xxhsum -H64 | head -c 16).js"
	SCRIPT_PATH="$SCRIPT_FOLDER/$SCRIPT_NAME"
	ensure_script "$FILTERCLASS" "$FILTERTITLE" "$TOGGLE"

	SCRIPT_NAME="ww$RANDOM"

	# install the script
	ID=$(dbus-send --session --dest=org.kde.KWin --print-reply=literal /Scripting org.kde.kwin.Scripting.loadScript "string:$SCRIPT_PATH" "string:$SCRIPT_NAME" | awk '{print $2}')
	# run it - some KDEs version use Script.run others Scripting.run
	dbus-send --session --dest=org.kde.KWin --print-reply=literal "/$ID" org.kde.kwin.Scripting.run >/dev/null 2>&1
	dbus-send --session --dest=org.kde.KWin --print-reply=literal "/$ID" org.kde.kwin.Script.run >/dev/null 2>&1
	# stop it - some KDEs version use Script.run others Scripting.run
	dbus-send --session --dest=org.kde.KWin --print-reply=literal "/$ID" org.kde.kwin.Scripting.stop >/dev/null 2>&1
	dbus-send --session --dest=org.kde.KWin --print-reply=literal "/$ID" org.kde.kwin.Script.stop >/dev/null 2>&1
	# uninstall it
	dbus-send --session --dest=org.kde.KWin --print-reply=literal /Scripting org.kde.kwin.Scripting.unloadScript "string:$SCRIPT_NAME" >/dev/null 2>&1
elif [ -n "$DESKTOP" ]; then
	exec gtk-launch "${DESKTOP}" >/dev/null 2>&1 &
fi
